packer {
  required_version = ">= 1.8.0, < 2.0.0"
  required_plugins {
    qemu = {
      source  = "github.com/hashicorp/qemu"
      version = ">= 1.0.9"
    }
    ansible = {
      version = ">=1.0.0"
      source = "github.com/hashicorp/ansible"
    }
  }
}

source "qemu" "ubuntu" {
  iso_skip_cache = false
  iso_target_extension = "iso"
  iso_url = "{{ packer_iso_url }}"
  iso_checksum = "{{ packer_iso_checksum }}"

  # PACKER Autoinstall Settings
  boot_command = [
    "<esc><wait>",
    "e<wait>",
    "<down><down><down><end>",
    "<bs><bs><bs><bs><wait>",
    "autoinstall ds=nocloud-net\\;s=http://{{ '{{' }} .HTTPIP {{ '}}' }}:{{ '{{' }}.HTTPPort {{ '}}' }}/ ---<wait>",
    "<f10><wait>"
  ]
  boot_wait = "10s"
  http_directory = "http"

  # VM Settings
  cpus = "1"
  disk_cache = "writeback"
  disk_compression = false
  disk_discard = "ignore"
  disk_image = false
  disk_interface = "virtio-scsi"
  disk_size = "7500M"
  format = "raw"
  memory = "1024"
  net_device = "virtio-net"
  vm_name = "base-{{ packer_template_name }}"
  skip_nat_mapping = false
  qemu_binary = "qemu-system-x86_64"
  use_default_display = false
  accelerator = "kvm"
  communicator = "ssh"

  # SSH settings
  ssh_agent_auth = false
  ssh_clear_authorized_keys = false
  ssh_disable_agent_forwarding = false
  ssh_file_transfer_method = "scp"
  ssh_handshake_attempts = "100"
  ssh_keep_alive_interval = "5s"
  ssh_username = "{{ packer_default_user }}"
  ssh_password = "{{ packer_default_user_password }}"
  ssh_port = "22"
  ssh_pty = false
  ssh_timeout = "60m"

  # Packer compacts the QCOW2 image using qemu-img convert. Set this option to true to disable compacting. Defaults to false.
  skip_compaction = true

  headless = "false"

  output_directory = "{{ packer_working_dir }}/build"

  shutdown_command = "sudo su root -c \"userdel -rf {{ packer_default_user }}; rm /etc/sudoers.d/90-cloud-init-users; /sbin/shutdown -hP now\""
  shutdown_timeout = "5m"
}

build {
    sources = [
      "qemu.ubuntu",
    ]

    provisioner "shell" {
        inline = [
            {% for item in packer_provisioner_commands_ubuntu -%}
            "{{ item }}",
            {% endfor %}

        ]
    }
}
